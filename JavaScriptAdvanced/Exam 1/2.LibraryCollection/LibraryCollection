class LibraryCollection{

    constructor (capacity,books)
    {
        this.capacity=capacity;
        this.books=[];
    }
    addBook(bookName, bookAuthor)
    {
        if(this.books.length===this.capacity)
        {
            throw new Error(`Not enough space in the collection.`);
        }

        let newBook={
            bookName:bookName,
            bookAuthor:bookAuthor,
            payed:false
        }

        this.books.push(newBook);
            
        return `The ${bookName}, with an author ${bookAuthor}, collect.`;

    }
    payBook(bookName)
    {
        let findBook=this.books.find(bo=>bo.bookName===bookName);
        if(!findBook)
        {
            throw new Error(`${bookName} is not in the collection.`);
        }
        if(findBook.payed===true)
        {
            throw new Error(`${bookName} has already been paid.`);
        }

        findBook.payed=true;
        return `${bookName} has been successfully paid.`;
    }
    removeBook(bookName)
    {
        let findBook=this.books.find(bo=>bo.bookName===bookName);
        if(!findBook)
        {
            throw new Error(`The book, you're looking for, is not found.`);
        }
        if(findBook.payed===false)
        {
            throw new Error(`${bookName} need to be paid before removing from the collection.`);
        }

        this.books=this.books.filter(b=>b.bookName!==bookName);
        return `${bookName} remove from the collection.`;

    }
    getStatistics(bookAuthor)
    {

        if(bookAuthor!==undefined)
        {
            let book=this.books.find(b=>b.bookAuthor===bookAuthor);
            if(!book)
            {
                throw new Error(`${bookAuthor} is not in the collection.`);

            }
            return `${book.bookName} == ${book.bookAuthor} - ${book.payed===true ? 'Has Paid' : 'Not Paid'}.`;
        }

        let result=[];
        result.push(`The book collection has ${this.capacity-this.books.length } empty spots left.`);
        this.books.forEach(b=>result.push(`${b.bookName} == ${b.bookAuthor} - ${b.payed===true ? 'Has Paid' : 'Not Paid'}.`));

        return result.join('\n');
    }

}
